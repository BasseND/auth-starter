version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: auth-starter-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: auth_starter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - auth-network-dev

  # Backend NestJS (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: auth-starter-backend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/auth_starter
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      NODE_ENV: development
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - auth-network-dev
    command: npm run start:dev

  # Frontend Angular (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: auth-starter-frontend-dev
    restart: unless-stopped
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - auth-network-dev
    command: ng serve --host 0.0.0.0 --port 4200
    depends_on:
      - backend

volumes:
  postgres_data_dev:

networks:
  auth-network-dev:
    driver: bridge